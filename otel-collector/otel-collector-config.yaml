extensions:
  health_check:
# A receiver is how data gets into the OpenTelemetry Collector
receivers:
  # Set Prometheus Receiver to collects metrics from targets
  # It’s supports the full set of Prometheus configuration
  prometheus:
  # namespace: "default"
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 20s
          static_configs: 
              # Replace the IP to your VMs‘s IP which has installed Node Exporter
              # Open ports
            - targets: [ 'HOST1:9100' ] 
            - targets: [ 'HOST1:9100' ]
          relabel_configs:
          - action: replace
            replacement: otel-collector
            target_label: job
            regex: __(.+)

processors:
  batch:

# An exporter is how data gets sent to different systems/back-ends
exporters:
  # Exports metrics via gRPC using OpenCensus format
  opencensus:
    endpoint: "OAP-HOST:11800" # The OAP Server address
    insecure: true
  logging:
    logLevel: debug

service:
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [logging, opencensus]

  extensions: [health_check]